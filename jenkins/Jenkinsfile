pipeline {
    agent any
    
    tools {
        nodejs 'nodejs23'
    }

    environment {
        IMAGE_NAME = "samarthr8/devops-task"
    }
    
    triggers {
        githubPush()
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/samarthr8/devops-task-swayatt.git'
            }
        }
        
        stage('Build & Test') {
            steps {
                sh 'npm ci'
                sh 'npm test || true' 
            }
        }

        stage('Build-Tag & Push Docker Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred') {
                            sh "docker build -t ${IMAGE_NAME}:v-${env.BUILD_NUMBER} ."
                            sh "docker tag ${IMAGE_NAME}:v-${env.BUILD_NUMBER} ${IMAGE_NAME}:latest"
                            sh "docker push ${IMAGE_NAME}:v-${env.BUILD_NUMBER}"
                            sh "docker push ${IMAGE_NAME}:latest"
                    }
                }
            }
        }

        stage('EC2 Deployment') {
            steps {
                script {
                    // This assumes Jenkins is running on the EC2 instance
                    sh "docker stop devops-task-deployment || true"
                    sh "docker rm devops-task-deployment || true" 
                    sh "docker run -d -p 3000:3000 --name devops-task-deployment ${IMAGE_NAME}:latest"
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                sh 'docker ps'
            }
        }
        
        stage('K8s Deployment') {
            steps {
                script {
                    sh '''
                        aws eks update-kubeconfig --region us-east-1 --name devops-task-cluster
                        kubectl apply -f K8s/deployment.yaml
                        kubectl apply -f K8s/service.yaml
                        sleep 30
                    '''
                    }
                }
            }
        
        stage('Verify K8s Deployment') {
            steps {
                script {
                    sh '''
                        aws eks update-kubeconfig --region us-east-1 --name devops-task-cluster
                        kubectl get pods
                        kubectl get svc
                    '''
                }
            }
        }
    }
}

